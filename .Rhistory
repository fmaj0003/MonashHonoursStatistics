q()
## put your code to summarize the final model using modelTest() here
summary(m)
load("~/Git Repos/MonashHonoursStatistics/LabReportA.RData")
## put your code to summarize the final model using modelTest() here
summary(m)
confint(m) # calculating confidence interval
mtest <- modelTest(m)
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
## read in data
db <- as.data.table(read_sav("[2021] PSY4210 BL.sav")) # baseline data
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
## read in data
db <- as.data.table(read_sav("[2021] PSY4210 BL.sav")) # baseline data
#creating variable "anxiety"
db[, anxiety := rowMeans(.SD, na.rm = TRUE) * 4,
.SDcols = c("STAI1", "STAI2", "STAI3", "STAI4")]
# turning sex into a factor
db[, sex := factor(
sex,
levels = c(1,2),
labels = c("male", "female"))]
db [, BFI_C1 := 6- BFI_C1r] #reverse scoring
db [, conscientiousness := rowMeans(.SD, na.rm = TRUE),
.SDcols = c("BFI_C1", "BFI_C2")] # creating variable "conscientiousness"
## put your regression model code using lm() here
m <- lm(anxiety ~ sex * conscientiousness, data = db)
## put your regression diagnostics code including plots using modelDiagnostics() here
md <- modelDiagnostics(m, ev.perc = 0.005)
plot(md, ncol = 2, ask = FALSE)
## put your code to summarize the final model using modelTest() here
summary(m)
confint(m) # calculating confidence interval
mtest <- modelTest(m)
knitr::kable(APAStyler(mtest)) # clean presentation
## put your code to visualize your regression model using visreg() here
visreg(m, xvar = "conscientiousness", by = "sex",
partial = FALSE, rug = FALSE,
overlay = TRUE, gg = TRUE) +
theme_pubr() +
ggtitle("Multiple regression for anxiety - separate lines for each sex group")
#predicted probability graph for SelfesteemHigh
visreg(mlog, xvar = "extraversion",
by = "agreeableness", breaks = c(3, 4.5),
scale = "response", overlay = TRUE,
partial = FALSE, rug = FALSE, gg = TRUE) +
ylab("predicted probability of being high self esteem") +
theme_pubr() +
ggtitle("Predicted probability of being high-self esteem - separate lines for high and low anxiety")
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
## read in data
db <- as.data.table(read_sav("[2021] PSY4210 BL.sav")) # baseline data
#creating variable "anxiety"
db[, anxiety := rowMeans(.SD, na.rm = TRUE) * 4,
.SDcols = c("STAI1", "STAI2", "STAI3", "STAI4")]
# turning sex into a factor
db[, sex := factor(
sex,
levels = c(1,2),
labels = c("male", "female"))]
db [, BFI_C1 := 6- BFI_C1r] #reverse scoring
db [, conscientiousness := rowMeans(.SD, na.rm = TRUE),
.SDcols = c("BFI_C1", "BFI_C2")] # creating variable "conscientiousness"
## put your regression model code using lm() here
m <- lm(anxiety ~ sex * conscientiousness, data = db)
## put your regression diagnostics code including plots using modelDiagnostics() here
md <- modelDiagnostics(m, ev.perc = 0.005)
plot(md, ncol = 2, ask = FALSE)
## put your code to summarize the final model using modelTest() here
summary(m)
confint(m) # calculating confidence interval
mtest <- modelTest(m)
knitr::kable(APAStyler(mtest)) # clean presentation
## put your code to visualize your regression model using visreg() here
visreg(m, xvar = "conscientiousness", by = "sex",
partial = FALSE, rug = FALSE,
overlay = TRUE, gg = TRUE) +
theme_pubr() +
ggtitle("Multiple regression for anxiety - separate lines for each sex group")
#create self-esteem from LSE questions
db[, selfesteem:= rowMeans(.SD, na.rm = TRUE),
.SDcols = c("LSE1", "LSE2", "LSE3", "LSE4")]
db[, SelfesteemHigh := as.integer(selfesteem >= 3.75)] #create "SelfesteemHigh" variable
#create extraversion variable (predictor) from BFI_E questions
db [, BFI_E1 := 6- BFI_E1r] # reverse scoring
db[, extraversion := rowMeans(.SD, na.rm = TRUE),
.SDcols = c("BFI_E1", "BFI_E2")] # creating variable "extraversion"
#create agreeableness variable (predictor) from BFI_A questions
db [, BFI_A2 := 6- BFI_A2r] # reverse scoring
db [, agreeableness := rowMeans(.SD, na.rm = TRUE),
.SDcols = c("BFI_A1", "BFI_A2")] #creating variable "agreeableness"
mlog <- glm(SelfesteemHigh ~ extraversion + agreeableness,
data = db, family = binomial())
summary(mlog)
#predicted probability graph for SelfesteemHigh
visreg(mlog, xvar = "extraversion",
by = "agreeableness", breaks = c(3, 4.5),
scale = "response", overlay = TRUE,
partial = FALSE, rug = FALSE, gg = TRUE) +
ylab("predicted probability of being high self esteem") +
theme_pubr() +
ggtitle("Predicted probability of being high-self esteem - separate lines for high and low anxiety")
#predicted probability graph for SelfesteemHigh
visreg(mlog, xvar = "extraversion",
by = "agreeableness", breaks = c(3, 4.5),
scale = "response", overlay = TRUE,
partial = FALSE, rug = FALSE, gg = TRUE) +
ylab("predicted probability of being high self esteem") +
theme_pubr()
# making original dataset to interpret with predictors, excluding missing values
originaldata <- db[!is.na(extraversion),
.(extraversion, agreeableness)]
# making original dataset to interpret with predictors, excluding missing values
originaldata <- db[!is.na(extraversion),
.(extraversion, agreeableness)]
?tufte
??tufte
q()
options(digits = 4)
## emmeans is a new package
library(data.table)
library(JWileymisc)
library(extraoperators)
library(lme4)
library(lmerTest)
library(multilevelTools)
library(visreg)
library(ggplot2)
library(ggpubr)
library(haven)
library(emmeans)
## load data collection exercise data
## merged is a a merged long dataset of baseline and daily
dm <- as.data.table(read_sav("[2021] PSY4210 merged.sav"))
## Remind R which of our variables are factors
dm[, sex := factor(
sex,
levels = c(1,2),
labels = c("male", "female"))]
dm[, relsta := factor(
relsta, levels = c(1,2,3),
labels = c("single", "in a committed exclusive relationship", "in a committed nonexclusive relationship"))]
?$
?`$`
library(data.table)
library(JWileymisc)
library(extraoperators)
library(lme4)
library(lmerTest)
library(multilevelTools)
library(visreg)
library(ggplot2)
library(ggpubr)
library(haven)
library(emmeans)
View(dm)
dm <- as.data.table(read_sav("[2021] PSY4210 merged.sav"))
library(data.table)
library(JWileymisc)
library(extraoperators)
library(lme4)
library(lmerTest)
library(multilevelTools)
library(visreg)
library(ggplot2)
library(ggpubr)
library(haven)
library(emmeans)
dm <- as.data.table(read_sav("[2021] PSY4210 merged.sav"))
setwd("~/Git Repos/MonashHonoursStatistics")
dm <- as.data.table(read_sav("[2021] PSY4210 merged.sav"))
summary(lmer(dSE ~ agreeableness + dMood + (1 | ID), data = dm))
dm[, c("Bmood", "Wmood" := menaDeviation(dMood), by = ID]
dm[, c("Bmood", "Wmood") := menaDeviation(dMood), by = ID]
dm[, c("Bmood", "Wmood") := meanDeviation(dMood), by = ID]
dm[, c("Bmood", "Wmood") := meanDeviations(dMood), by = ID]
summary(lmer(dSE ~ Bmood + Wmood + (1 |ID), data = dm))
m1 <- lmer(dSE ~ Int_Part + relsta + Int_Part:relsta  + (1 | ID), data = dm)
summary(m1)
summary(lmer(dSE ~ Int_Part * relsta + (1 | ID), data = dm ))
visreg(m1, xvar = "Int_Part",
by = "relsta", overlay = TRUE,
partial = FALSE, rug = FALSE
)
visreg(m1, xvar = "Int_Part",
by = "relsta", overlay = TRUE,
partial = FALSE, rug = FALSE
)
em <- emmeans(m1, "Int_Part", by "relsta", lmer.df = "satterthwaite"
View(m1)
View(dm)
