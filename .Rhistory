theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 6.5, y = 2.2,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -20)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 6.5, y = 2.2,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -23)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 6.5, y = 2.2,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 6, y = 2.2,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 5.9, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 5.7, y = 2.5,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 5.7, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3.2,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -27) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 2.8,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -23) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -23) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -25) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 3,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -26) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
## Generate LMM
m2 <- lmer(STRESS ~ SUPPORT + COPEPrb + SUPPORT:COPEPrb + (1 | UserID), data = d)
APAStyler(modelTest(m2),
pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
includeSign = TRUE, dropLeadingZero = TRUE))
## finding M and SD of COPEPrb to generate simple slope for interaction
egltable(c("COPEPrb"), data = d[!duplicated(UserID)])
## test simple slope
mem <- emtrends(m2, var = "SUPPORT",
at = list(COPEPrb = c(2.37-0.66, 2.37+0.66)),
lmer.df = "satterthwaite")
summary(mem, infer = TRUE)
## Create interaction graph
visreg(m2, xvar = "SUPPORT",
by = "COPEPrb", overlay=TRUE,
breaks = c(2.37-0.66, 2.37+0.66),
partial = FALSE, rug = FALSE, gg=TRUE,
xlab = "Social Support",
ylab = "Predicted Stress Rating") +
scale_color_manual(values = c("1.71" = "black", "3.03" = "grey70")) +
theme_pubr() +
guides(colour = FALSE, fill = FALSE) +
annotate(geom = "text", x = 6, y = 2.9,
label = "High Problem-Focused Coping: b = -0.24 [ -0.30, -0.18], p <.0001",
angle = -26) +
annotate(geom = "text", x = 5.5, y = 2.3,
label = "Low Problem-Focused Coping: b = -0.2 [-0.24, -0.15], p <.0001",
angle = -21)
##APAStyler(modelTest(m2),
## pcontrol = list(digits = 3, stars = FALSE, includeP = TRUE,
##includeSign = TRUE, dropLeadingZero = TRUE))
ri.m <- lmer(PosAff ~ 1 + (1 | UserID),
data = d,
REML = TRUE)
summary(ri.m)
## calculate intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data = d)
## run model diagnostic
plot(modelDiagnostics(ri.m), ncol = 2, nrow = 2, ask = FALSE)
class(d$COPEPrb)
## create a between and within STRESS variable
d[, c("bSTRESS", "wSTRESS") := meanDeviations(STRESS), by = UserID]
## linear mixed model with bSTRESS and wSTRESS predicting NegAff
m1 <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = d)
## run model diagnostics
m1.diag <- modelDiagnostics(m1, ev.perc = .005)
plot(m1.diag, ncol = 2, nrow = 3, ask = FALSE)
library(haven)
library(data.table)
library(JWileymisc)
library(ggplot2)
library(ggpubr)
library(visreg)
# Add other packages you need here
library(tufte)
library(mice)
library(VIM)
library(lme4)
library(lmerTest)
library(multilevelTools)
library(emmeans)
## read in the dataset
data(aces_daily)
d <- as.data.table(aces_daily)
## between person data, no missing
davg <- na.omit(d[, .(
Female = factor(na.omit(Female)[1], levels = 0:1),
Age = na.omit(Age)[1],
STRESS = mean(STRESS, na.rm = TRUE),
PosAff = mean(PosAff, na.rm = TRUE),
NegAff = mean(NegAff, na.rm = TRUE)),
by = UserID])
## create missing data
davgmiss <- copy(davg)
davgmiss[STRESS < 1, NegAff := NA]
davgmiss[STRESS > 4, PosAff := NA]
## random missingness on age
set.seed(1234)
davgmiss[, Age := ifelse(rbinom(
.N, size = 1, prob = .1) == 1,
NA, Age)]
## drop unneeded variables to make analysis easier
davgmiss[, UserID := NULL]
## multiply impute data
mi.1 <- mice(
davgmiss,
m = 5,   maxit = 30,
defaultMethod = c("norm", "logreg", "polyreg", "polr"),
seed = 1234, printFlag = FALSE)
## convergence plot
plot(mi.1, PosAff + NegAff + Age ~ .it | .ms)
## linear regression with imputed dataset
mi.reg <- with(mi.1, lm(STRESS ~ NegAff + Age))
mi.reg #print
pool.r.squared(mi.reg) #pooled results with R^2 values
ri.m <- lmer(PosAff ~ 1 + (1 | UserID),
data = d,
REML = TRUE)
summary(ri.m)
## calculate intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data = d)
## run model diagnostic
plot(modelDiagnostics(ri.m), ncol = 2, nrow = 2, ask = FALSE)
## create a between and within STRESS variable
d[, c("bSTRESS", "wSTRESS") := meanDeviations(STRESS), by = UserID]
## linear mixed model with bSTRESS and wSTRESS predicting NegAff
m1 <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = d)
## run model diagnostics
m1.diag <- modelDiagnostics(m1, ev.perc = .005)
plot(m1.diag, ncol = 2, nrow = 3, ask = FALSE)
## create a between and within STRESS variable
d[, c("bSTRESS", "wSTRESS") := meanDeviations(STRESS), by = UserID]
## linear mixed model with bSTRESS and wSTRESS predicting NegAff
m1 <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = d)
## run model diagnostics
m1.diag <- modelDiagnostics(m1, ev.perc = .005)
plot(m1.diag, ncol = 2, nrow = 3, ask = FALSE)
## creating new dataset with extremevalues removed and rerun model
dnoev <- d[-unique(m1.diag$extremeValues$Index)]
m1noev <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = dnoev)
summary(m1noev) #final model summary
## creating new dataset with extremevalues removed and rerun model
dnoev <- d[-unique(m1.diag$extremeValues$Index)]
m1noev <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = dnoev)
summary(m1noev) #final model summary
## confidence interval for new model
m1noev.ci <- confint(m1noev, oldNames = FALSE)
## creating new dataset with extremevalues removed and rerun model
dnoev <- d[-unique(m1.diag$extremeValues$Index)]
m1noev <- lmer(PosAff ~ bSTRESS + wSTRESS + (1 + wSTRESS | UserID), data = dnoev)
summary(m1noev) #final model summary
## confidence interval for new model
m1noev.ci <- confint(m1noev, oldNames = FALSE)
m1noev.ci
ri.m <- lmer(PosAff ~ 1 + (1 | UserID),
data = d,
REML = TRUE)
summary(ri.m)
## calculate intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data = d)
## run model diagnostic
#plot(modelDiagnostics(ri.m), ncol = 2, nrow = 2, ask = FALSE)
## Confidence interval of the model
confint(ri.m, method = "profile", oldNames = FALSE)
ri.m <- lmer(PosAff ~ 1 + (1 | UserID),
data = d,
REML = TRUE)
summary(ri.m)
## calculate intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data = d)
## run model diagnostic
plot(modelDiagnostics(ri.m), ncol = 2, nrow = 2, ask = FALSE)
## Confidence interval of the model
confint(ri.m, method = "profile", oldNames = FALSE)
ri.m <- lmer(PosAff ~ 1 + (1 | UserID),
data = d,
REML = TRUE)
summary(ri.m)
## calculate intraclass correlation coefficient
iccMixed("PosAff", id = "UserID", data = d)
